package bitx

import (
	"fmt"
	"testing"
)

func TestBit(t *testing.T) {

	// 32 << (^uint(0) >> 63)
	// 用公式判断是32位，还是64位
	x := ^uint(0) // 位非
	y := x >> 63  // x除以2的63次方
	z := 32 << y  // 32乘以2的y次方

	fmt.Printf("%b\n", x) // 1111111111111111111111111111111111111111111111111111111111111111 - 64个1
	fmt.Println(x, y, z)  // 18446744073709551615 1 64

	// 如果x是32个1
	{
		x := 1<<32 - 1
		y := x >> 63
		z := 32 << y

		fmt.Printf("%b\n", x) // 11111111111111111111111111111111 - 32个1
		fmt.Println(x, y, z)  // 4294967295 0 32
	}
}
